#!/usr/bin/env bash

#
## Colors
#

COLOR_WHITE="\[\033[1;37m\]"
COLOR_LIGHTGRAY="\[\033[0;37m\]"
COLOR_GRAY="\[\033[1;30m\]"
COLOR_BLACK="\[\033[0;30m\]"
COLOR_RED="\[\033[0;31m\]"
COLOR_LIGHTRED="\[\033[1;31m\]"
COLOR_GREEN="\[\033[0;32m\]"
COLOR_LIGHTGREEN="\[\033[1;32m\]"
COLOR_BROWN="\[\033[0;33m\]"
COLOR_YELLOW="\[\033[1;33m\]"
COLOR_BLUE="\[\033[0;34m\]"
COLOR_LIGHTBLUE="\[\033[1;34m\]"
COLOR_PURPLE="\[\033[0;35m\]"
COLOR_PINK="\[\033[1;35m\]"
COLOR_CYAN="\[\033[0;36m\]"
COLOR_LIGHTCYAN="\[\033[1;36m\]"
COLOR_DEFAULT="\[\033[0m\]"

function prompt_set_temp_color() {
   echo "$1$2$COLOR_DEFAULT"
}

function prompt_colorize_number {
   num=$1
   if [ $num -gt 0 ]; then
      color=""
      if [ $num -gt 2 ]; then
         color=$COLOR_RED
      else
         color=$COLOR_YELLOW
      fi

      echo "$(prompt_set_temp_color $color $num)"
   fi
}

function prompt_get_bg_jobs() {
   job_count=$(prompt_colorize_number $(jobs -r | wc -l))

   echo ${job_count:+" (bg: $job_count)"}
}

function prompt_get_stopped_jobs() {
   job_count=$(prompt_colorize_number $(jobs -s | wc -l))

   echo ${job_count:+" (stopped: $job_count)"}
}

function prompt_parse_git_branch {
   local branch=$(git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/\1/')

   if [ -n "$branch" ]; then
      local modified=$(git diff --quiet 2> /dev/null || echo " (mod)")
      local staged=$(git diff --cached --quiet 2> /dev/null || echo " (staged)")
      local stash_size=$(git stash list 2> /dev/null | wc -l)
      local untracked_files_count=$(git status --porcelain 2> /dev/null | grep -c "^??")
      local branches=$(git branch 2> /dev/null | grep -cv "^[*| ] master$")

      local clr_branch=$(prompt_set_temp_color $COLOR_LIGHTGREEN "$branch")
      local clr_modified=$(prompt_set_temp_color $COLOR_RED "$modified")
      local clr_staged=$(prompt_set_temp_color $COLOR_BLUE "$staged")
      local clr_stash=""
      local clr_untracked=""
      local clr_branches=""

      if [ $stash_size -gt 0 ]; then
         clr_stash=" (stash: $(prompt_colorize_number $stash_size))"
      fi

      if [ $untracked_files_count -gt 0 ]; then
         clr_untracked=" (untracked: $(prompt_colorize_number $untracked_files_count))"
      fi

      if [ $branches -gt 0 ]; then
         clr_branches=" ($(prompt_colorize_number $branches))"
      fi

      echo " (git: ${clr_branch}${clr_branches}${clr_modified}${clr_staged}${clr_stash}${clr_untracked})"
   fi
}

function prompt_dirs_stack_size {
   cur_count=$(dirs -p | wc -l)

   if [ $cur_count -gt 1 ]; then
      echo " (dirs: $(prompt_colorize_number $(($cur_count - 1))))"
   fi
}

function prompt_detached_screens {
   local detached_count=$(screen -list 2> /dev/null | grep -c "(Detached)")
   local color=""

   if [ $detached_count -gt 0 ]; then
      if [ $detached_count -gt 1 ]; then
         color=$COLOR_RED
      else
         color=$COLOR_YELLOW
      fi

   fi

   if [ "$detached_count" != "0" ]; then
      echo " (sd: $(prompt_set_temp_color $color $detached_count))"
   fi
}

function prompt_battery_status {
   if [ "$BS_BATTERY_FILE" == "" ]; then
      return
   fi

   local rem_cap=$(cat "${BS_BATTERY_FILE}/state" 2> /dev/null | grep "^remaining capacity" | awk '{ print $3 }')
   local full_cap=$(cat "${BS_BATTERY_FILE}/info" 2> /dev/null | grep "^last full capacity" | awk '{ print $4 }')
   local state=$(cat "${BS_BATTERY_FILE}/state" 2> /dev/null | grep "^charging state" | awk '{print $3}')

   if [[ "${rem_cap}" == "" || "${full_cap}" == "" ]]; then
      return
   fi

   local charge=$(( ${rem_cap} * 100 / ${full_cap} ))
   local color=""
   local clr_charge=${charge}
   local clr_logo="Ïž"

   if [ ${charge} -lt 50 ]; then
      if [ ${charge} -lt 15 ]; then
         color=$COLOR_RED
      else
         color=$COLOR_YELLOW
      fi

      clr_charge=$(prompt_set_temp_color ${color} ${charge})
   fi

   if [[ "${state}" == "charging" || ""${state} == "charged" ]]; then
      clr_logo=$(prompt_set_temp_color ${COLOR_LIGHTGREEN} ${clr_logo})
   fi

   echo "(${clr_logo}: ${clr_charge}) "
}

function prompt_command() {
   P_USER=$(prompt_set_temp_color $COLOR_GREEN "\u")
   P_HOST=$(prompt_set_temp_color $COLOR_GREEN"\h")
   P_DIR=$(prompt_set_temp_color $COLOR_LIGHTCYAN "\w")
   P_DSTACK=$(prompt_dirs_stack_size)
   P_BG_JOBS=$(prompt_get_bg_jobs)
   P_STOPPED_JOBS=$(prompt_get_stopped_jobs)
   P_GIT_BRANCH=$(prompt_parse_git_branch)
   P_DETACHED_SCREEN=$(prompt_detached_screens)
   P_BATTERY=$(prompt_battery_status)

   PS1="${P_BATTERY}${P_USER}@${P_HOST}:${P_DIR}${P_BG_JOBS}${P_STOPPED_JOBS}${P_DSTACK}${P_DETACHED_SCREEN}${P_GIT_BRANCH}\$ "
}

#
# Set prompt
#

export PROMPT_COMMAND=prompt_command

